{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SACA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,uBAC9BE,KAAMH,SAASC,cAAc,sBAC7BG,OAAQJ,SAASC,cAAc,wBAC/BI,YAAaL,SAASC,cAAc,0BAGtC,SAASK,EAAcC,EAAUL,GAe/B,OAbgB,IAAIM,SAAQ,CAACC,EAASC,KAEpCC,YAAW,KACaC,KAAKC,SAAW,GAGpCJ,EAAQ,C,SAAEF,E,MAAUL,IAEpBQ,EAAO,C,SAAEH,E,MAAUL,GAAM,GAE1BY,SAAShB,EAAKI,MAAMa,OAAK,GAIhC,CAEAjB,EAAKO,YAAYW,iBAAiB,SAASC,IACzCA,EAAIC,iBAEJ,IAAIC,EAAaC,OAAOtB,EAAKI,MAAMa,OAC/BM,EAAYD,OAAOtB,EAAKK,KAAKY,OAEjC,IAAI,IAAIO,EAAI,EAAGA,EAAIxB,EAAKM,OAAOW,MAAOO,GAAK,EACzChB,EAAc,EAAIgB,EAAGH,EAAaG,EAAID,GACrCE,MAAK,EAAChB,SAAEA,EAAQL,MAAEA,MACjBsB,EAAA5B,GAAS6B,OAAOC,QACd,uBAAuBnB,QAAeL,MAAS,IAGlDyB,OAAM,EAACpB,SAAEA,EAAQL,MAAEA,MAClBsB,EAAA5B,GAAS6B,OAAOG,QAAQ,qBAAqBrB,QAAeL,MAAS,IAGzEJ,EAAKC,KAAK8B,OAAK","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from \"notiflix\";\nconst refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('input[name=\"delay\"]'),\n  step: document.querySelector('input[name=\"step\"]'),\n  amount: document.querySelector('input[name=\"amount\"]'),\n  btnPromises: document.querySelector('button[type=\"submit\"]'),\n};\n\nfunction createPromise(position, delay) {\n\n  const promise = new Promise((resolve, reject) => {\n\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, parseInt(refs.delay.value));\n  });\n\n  return promise;\n}\n  \nrefs.btnPromises.addEventListener('click', evt => {\n  evt.preventDefault();\n\n  let firstDelay = Number(refs.delay.value);\n  let stepDelay = Number(refs.step.value);\n\n  for(let i = 0; i < refs.amount.value; i += 1) {\n    createPromise(1 + i, firstDelay + i * stepDelay)\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(\n        `âœ… Fulfilled promise ${position} in ${delay}ms`\n      );\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(` Rejected promise ${position} in ${delay}ms`);\n    });\n  }\n  refs.form.reset();\n});\n\n\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","delay","step","amount","btnPromises","$47d4ff9957288465$var$createPromise","position","Promise","resolve","reject","setTimeout","Math","random","parseInt","value","addEventListener","evt","preventDefault","firstDelay","Number","stepDelay","i","then","$parcel$interopDefault","Notify","success","catch","failure","reset"],"version":3,"file":"03-promises.5ab611e5.js.map"}